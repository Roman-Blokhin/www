Создание социальной сети на PHP.

1. Создаем файл index.php в котором прописываем основные html теги, включая header и footer

2. Создаем папку СSS, в котором мы будем прописывать наши стили + в ней создаем файл style.css

3. Привязываем ссылки через link: 1). наш файл css; 2). копируем стили с сайта bootstrapcdn.com

4. Создаем папку img, ищем нужную нам картинку с логотипом и скачиваем в эту папку.

5. Прикрепляем фото логотипа в наш header с помощью тега img src=""

6. Создаем класс .style_logo в файле style.php, в котором выбираем параметры нашей картинки-логотипа: border, width: px, height: px

7. Создаем класс .header_parameters в файле style.php, в котором указываем параметры для header: background-color,
margin: px; (величина отступа от края экрана), padding: 1rem 1rem, text-align: (в какой стороне будет текст),
border-radius: px (скругление углов)

8. Создаем дополнительные файлы, в которых будем прописывать код для наших страниц, отображаемых в header: faq, global,
invite, log_out, search, social_net (и другие, если нужно)

9. С помощью a href="" прикрепляем ссылки к нашим новым файлам, указанным в пункте 8

10. В теге footer мы прописываем информацию о правах и год

11. Так как у нас есть код, который повторяется в каждом файле, мы создаем два новых файла: header.php, footer.php

12. Переносим в файл header.php весь верхний блок кода вместе с header, потому что он у нас повторяется

13. Переносим в файл footer.php весь нижний блок кода вместе с footer и закрывающими код тегами,
потому что он у нас повторяется

14. С помощью конструкции require прописываем путь в наших файлах (global, faq etc). Код пишется в <?php ?>
Нужен код и для файла header.php, и для файла footer.php

15. Создаем папку js для файлов с кодом JavaScript

16. В каждом файле прописываем php код с заголовком страницы (Главная, Поиск и т.д.)

17. В каждом файле создаем переменную $title, в которой прописываем заголовок страницы. Переходим в файл header.php и
в теге head - title прописываем путь к наименованию заголовка в каждом файле <?=title;?>.
Теперь у каждой страницы появится свой заголовок

18. В файле log_out.php создаем форму обратной связи. Метод выбираем post для отправки данных на сервер.

19. Создаем новый файл check_post.php, который подключаем к нашей форме через action="", чтобы данные,
введенные пользователем отправлялись именно в него.

20. Прописываем нужный текст про форму обратной связи. Внутри формы создаем с помощью input все наши поля:
- для ввода имени пользователя (указываем тип, имя, текст на заднем фоне в форме и подключаем класс ".form-control",
который встроен в подключенный стиль bootstrapcdn (1-//-//-)
- для email (2-//-//-)
- для сообщения (textarea) (3-//-//-)
- кнопку для отправки данных на сервер с перезагрузкой страницы (type = submit), подключаем класс ".btn btn-succses",
который встроен в подключенный стиль bootstrapcdn

21. Нашей коробке div, в которой создали форму, присваиваем класс ".container mt-5", встроенный в bootstrapcdn.
mt-5 отвечает за отступ над формой

22. Прописываем сообщение, которое увидит наш пользователь, отправив сообщение в форме, на странице check_post.php

23. Добавляем класс в файле css для надписи: Выход в файле log_out.php (header_parameters_2)

24. Добавляем рамку в нашу шапку

25. добавил id #aside, тестирую section, чтобы блоки находились в разных частях страницы (в работе)

26. сделал поиск на главной странице, создал классы для блока поиска и кнопки поиска ( .search_block, .search_button)

27. установил шрифты, рамки и отступы для шапки и блока поиска. Поиск методом post,
обработка на странице check_post.php

28. добавил класс links, где указал стиль для ссылок, подключил стиль про наведении на ссылку класса links

29. удалил из файла index все лишние блоки. буду писать их заново

30. убрал поиск и перенес ссылки из шапки в тело, создал контейнер main для первой линии блоков

31. переименовал ссылки и файлы, сделал более похожими на соц. сеть
(Моя страница, новости, друзья, сообщества, фотографии, музыка, обратная связь)

32.

